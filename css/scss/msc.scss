// Pre-overrides
// =============

// Colours
$primary: #6b2e20;
$success: #4e8335;//#63a844,
$info:    #00acc1;
$warning: #ebdc14;//#ffb300,
$danger:  #e53935;
$dark:    #1c1c1d;

$field-colors: (
  "keyword": #d0b7ad,
  "datatype": #fff5c2,
  "location": #bbdefb,
);

$component-active-bg: $primary;

// Grid
// - minimum screen width for given corresponding responsive classes
$grid-breakpoints: (
  xxs: 0,
  xs: 240px,
  sm: 480px,
  md: 672px,
  lg: 992px,
  xl: 1200px
);

// Typography
$font-family-sans-serif:  "Open Sans", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
$link-color: #0d47a1;

// Forms
$form-text-margin-top: 1rem;

// Required
// ========

@import "../bootstrap/scss/functions";
@import "../bootstrap/scss/variables";
@import "../bootstrap/scss/maps";
@import "../bootstrap/scss/mixins";
@import "../bootstrap/scss/utilities";

// Post-overrides
// ==============
// These reference/overwrite settings defined in the files above. If they
// replace variables, these replacements won't affect any use of the variables
// before this point.

// Grid
// - maximum container width for screen width categories
$container-max-widths: (
  sm: 448px,
  md: 640px,
  lg: 752px,
);

// Typography
$headings-margin-bottom:  $spacer * 2;
$h1-font-size:            $font-size-base * 3;
$h2-font-size:            $font-size-base * 2.125;
$headings-font-weight:    300;

// Navbar
$navbar-padding-y:          $spacer * 0.75;
$navbar-dark-color:         rgba($white, .8);
$navbar-dark-hover-color:   $white;
$navbar-nav-link-padding-x: 1rem;

// Extra mixin allowing is-*valid to be set on ancestor instead
@mixin form-validation-state-inherit(
  $state,
  $color,
  $icon,
  $tooltip-color: color-contrast($color),
  $tooltip-bg-color: rgba($color, $form-feedback-tooltip-opacity),
  $focus-box-shadow: 0 0 $input-btn-focus-blur $input-focus-width rgba($color, $input-btn-focus-color-opacity)
) {
  @include form-validation-state-selector($state) {
    // Not styled by regular Bootstrap
    label {
      color: $color;
    }

    // Sibling relationship changed to descendant
    .#{$state}-feedback,
    .#{$state}-tooltip {
      display: block;
    }

    // Descendant state selectors removed
    .form-control {
      border-color: $color;

      @if $enable-validation-icons {
        padding-right: $input-height-inner;
        background-image: escape-svg($icon);
        background-repeat: no-repeat;
        background-position: right $input-height-inner-quarter center;
        background-size: $input-height-inner-half $input-height-inner-half;
      }

      &:focus {
        border-color: $color;
        box-shadow: $focus-box-shadow;
      }
    }

    textarea.form-control {
      @if $enable-validation-icons {
        padding-right: $input-height-inner;
        background-position: top $input-height-inner-quarter right $input-height-inner-quarter;
      }
    }

    .form-select {
      border-color: $color;

      @if $enable-validation-icons {
        &:not([multiple]):not([size]),
        &:not([multiple])[size="1"] {
          padding-right: $form-select-feedback-icon-padding-end;
          background-image: escape-svg($form-select-indicator), escape-svg($icon);
          background-position: $form-select-bg-position, $form-select-feedback-icon-position;
          background-size: $form-select-bg-size, $form-select-feedback-icon-size;
        }
      }

      &:focus {
        border-color: $color;
        box-shadow: $focus-box-shadow;
      }
    }

    .form-control-color {
      @if $enable-validation-icons {
        width: add($form-color-width, $input-height-inner);
      }
    }

    .form-check-input {
      border-color: $color;

      &:checked {
        background-color: $color;
      }

      &:focus {
        box-shadow: $focus-box-shadow;
      }

      ~ .form-check-label {
        color: $color;
      }
    }

    .input-group {
      > .form-control:not(:focus),
      > .form-select:not(:focus),
      > .form-floating:not(:focus-within) {
        @if $state == "valid" {
          z-index: 3;
        } @else if $state == "invalid" {
          z-index: 4;
        }
      }
    }
  }
}

// Optional
// ========
@import "../bootstrap/scss/root";
@import "../bootstrap/scss/reboot";
@import "../bootstrap/scss/type";
//@import "../bootstrap/scss/images";
@import "../bootstrap/scss/containers";
@import "../bootstrap/scss/grid";
@import "../bootstrap/scss/tables";
@import "../bootstrap/scss/forms";

@each $state, $data in $form-validation-states {
  @include form-validation-state-inherit($state, $data...);
}

@import "../bootstrap/scss/buttons";
@import "../bootstrap/scss/transitions";
//@import "../bootstrap/scss/dropdown";
//@import "../bootstrap/scss/button-group";
@import "../bootstrap/scss/nav";
@import "../bootstrap/scss/navbar";
@import "../bootstrap/scss/card";
//@import "../bootstrap/scss/accordion";
//@import "../bootstrap/scss/breadcrumb";
//@import "../bootstrap/scss/pagination";
//@import "../bootstrap/scss/badge";
@import "../bootstrap/scss/alert";
//@import "../bootstrap/scss/progress";
//@import "../bootstrap/scss/list-group";
@import "../bootstrap/scss/close";
//@import "../bootstrap/scss/toasts";
//@import "../bootstrap/scss/modal";
//@import "../bootstrap/scss/tooltip";
//@import "../bootstrap/scss/popover";
//@import "../bootstrap/scss/carousel";
//@import "../bootstrap/scss/spinners";
//@import "../bootstrap/scss/offcanvas";
//@import "../bootstrap/scss/placeholders";
@import "../bootstrap/scss/helpers";

// Local style rules
// =================

// A bit more space around the headings
h1, h2, h3, h4, h5, h6 {
  margin-top: $headings-margin-bottom + ($spacer / 2);
}

// Descriptions may or may not be wrapped in a <p>

div.description {
  margin-bottom: $paragraph-margin-bottom;
}

div.description {
  p:last-child,
  ol:last-child,
  ul:last-child,
  dl:last-child {
    margin-bottom: 0;
  }
}

// Add more space in nested lists
ul ul,
ul ol,
ol ul,
ol ol {
  margin-bottom: $paragraph-margin-bottom;
}

// Change bullet styles for deeply nested lists
ul ul ul ul {
  list-style-type: disc;
  list-style-type: "–  ";
}

ul ul ul ul ul {
  list-style-type: circle;
  list-style-type: "»  ";
}

ul ul ul ul ul ul {
  list-style-type: square;
  list-style-type: "›  ";
}

// Hybrid nav list and list-group
.nav-group {
  --#{$prefix}nav-group-border-color: #{$list-group-border-color};
  --#{$prefix}nav-group-border-width: #{$list-group-border-width};
  --#{$prefix}nav-group-border-radius: #{$list-group-border-radius};
  --#{$prefix}nav-group-hover-bg: #{$list-group-hover-bg};
  --#{$prefix}nav-group-disabled-color: #{$list-group-disabled-color};
  --#{$prefix}nav-group-disabled-bg: #{$list-group-disabled-bg};
  --#{$prefix}nav-group-active-bg: #{$list-group-action-active-bg};
  --#{$prefix}nav-group-active-border-color: #{$list-group-active-border-color};

  flex-direction: column;
  @include border-radius(var(--#{$prefix}nav-group-border-radius));

  :not(.nav-item) > & {
    border-left: var(--#{$prefix}nav-group-border-width) solid var(--#{$prefix}nav-group-border-color);
    border-right: var(--#{$prefix}nav-group-border-width) solid var(--#{$prefix}nav-group-border-color);
    border-bottom: var(--#{$prefix}nav-group-border-width) solid var(--#{$prefix}nav-group-border-color);

    & > .nav-item:first-child {
      @include border-top-radius(inherit);
    }

    & > .nav-item:first-child > .nav-link {
      @include border-top-radius(inherit);
    }

    & + .nav-group {
      margin-top: $spacer;
    }
  }
}

.nav-group .nav-group {
  padding-left: var(--bs-nav-link-padding-x);
}

@include media-breakpoint-up(sm) {
  .nav-group .nav-group {
    padding-left: calc(2 * var(--bs-nav-link-padding-x));
  }
}

.nav-group .nav-link {
  // Hover state
  &:hover,
  &:focus {
    z-index: 1; // Place hover/focus items above their siblings for proper border styling
    text-decoration: none;
    background-color: var(--#{$prefix}nav-group-hover-bg);
  }

  &:active {
    background-color: var(--#{$prefix}nav-group-active-bg);
  }

  border-top: var(--#{$prefix}nav-group-border-width) solid var(--#{$prefix}nav-group-border-color);

  &.disabled,
  &:disabled {
    color: var(--#{$prefix}nav-group-disabled-color);
    pointer-events: none;
    background-color: var(--#{$prefix}nav-group-disabled-bg);
  }

  &.active {
    z-index: 2; // Place active items above their siblings for proper border styling
    background-color: var(--#{$prefix}nav-group-active-bg);
    border-color: var(--#{$prefix}nav-group-active-border-color);
  }
}

// Compensate for additional margin-bottom on <dd>s
dl {
  margin-bottom: 0.5rem;
}

// Adjustments to handle flexbox <dl>s
dl div.d-flex {
  dt {
    margin-right: 0.5rem;

    &:after {
      content: ":";
    }
  }

  dd {
    flex-shrink: 1;
  }
}

// Tool and organization types
div.types {
  padding-top: map-get($spacers, 3);;
}

// Displaying certain lists of links as series of buttons

@each $color, $value in $field-colors {
  .btn-#{$color} {
    @include button-variant($value, $value);
  }
}

.list-inline {
  margin-top: $spacer * -0.375;
  margin-bottom: $spacer * .625;
}

.list-inline-item .btn {
  margin-top: $spacer * .375;
  margin-bottom: $spacer * .375;
}

div {
  &.keywords,
  &.dataTypes {
    p {
      padding-top: $btn-padding-y;
      padding-bottom: $btn-padding-y;
      margin-top: map-get($spacers, 1);
      margin-bottom: map-get($spacers, 1);
      border: $btn-border-width solid transparent;
      line-height: $btn-line-height;
    }
  }
}

// Adjustments to cards so they are a bit more like v3
.card .card-header .card-title {
  @include font-size($h5-font-size);
  margin-bottom: 0;

  & a:not(:hover) {
    text-decoration: none !important;
  }
}

// Shading for dl rows
dl.dl-striped {
  div:nth-of-type(#{$table-striped-order}) {
    background-color: $table-striped-bg;
  }

  div {
    padding-top: .5rem;
  }
}

// Special formats for form controls

label {
  font-weight: bold;
}

.form-group label.col-form-label {
  font-weight: inherit;
}

ol.form-list li + li {
  padding-top: 1rem;
}

.form-block .form-text li + li {
  margin-top: .5rem;
}

.form-group {
  margin-bottom: $paragraph-margin-bottom;
}

.form-subgroup {
  margin-bottom: $form-label-margin-bottom;
}

fieldset,
.fieldset {
  margin-bottom: $spacer * 1.5;
}

// Special formatting for the header

header {
  margin-bottom: $spacer;
}

// Special formatting for page announcements and actions

aside {
  margin-top: $spacer * 2.25;
}

aside.alert {
  margin-top: -$alert-margin-bottom;
  text-align: center;
}

// Special formatting for the footer

footer {
  margin-top: $spacer * 4;
  background-color: #eee;
  background-image: linear-gradient(#bdbdbd, #eee 17%, #eee 67%, #fff);
  color: #4f4f4f;
}

footer.navbar {
  border-radius: 0;
  border: none;
  padding: 0 1rem;
}

footer .navbar-nav > li > a {
  color: #4f4f4f;
  padding: 1rem;

  :hover,
  :focus {
    text-decoration: none;
    background-color: #f5f5f5;
    background-image: linear-gradient(#bdbdbd, #f5f5f5 17%, #f5f5f5 67%, #fff);
  }
}

@import "../bootstrap/scss/utilities/api";
